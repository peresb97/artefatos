paramEntidade = parametros.entidade.valor
paramMaterial = parametros.material.valor

esquema = [
	objeto: Esquema.caracter,
	dataRegistro: Esquema.data,
	quantidade: Esquema.numero,
	unidadeMedida: Esquema.caracter,
	valorItem: Esquema.numero,
	valorTotal: Esquema.numero,
	valorItemAnterior: Esquema.numero,
	porcentagem: Esquema.numero,
	itemId: Esquema.inteiro
]

fonte = Dados.dinamico.v2.novo(esquema)

critMat = "id in (${paramMaterial})"

critEnt = "id != 0"
if(paramEntidade != null){
	critEnt = "entidade.id = ${paramEntidade}"
}

imprimir critMat
imprimir critEnt

fonteMateriais = Dados.contratos.v1.materiais.busca(campos:"id, descricao, unidadeMedida.simbolo, id", ordenacao:"descricao asc, id asc", criterio:critMat)
fonteAditivosItens = Dados.contratos.v1.contratacoes.aditivos.itens.busca(campos:"id, quantidade, valorItem, valorTotal, contratacaoItem.valorTotal, aditivo.dataAditivo, contratacaoItem.material.id, contratacaoItem.valorUnitarioPercentual", ordenacao:"aditivo.dataAditivo asc, aditivo.id asc", criterio:critEnt)
fonteItensContratacao = Dados.contratos.v1.contratacoes.itens

percentual = nulo
ultimo = 0
ant = 0
listaAditivos = []

percorrer(fonteMateriais){itens->

	imprimir itens.descricao
	
	percorrer(fonteItensContratacao.busca(campos:"valorUnitarioPercentual, valorTotal, quantidade, material.id, material.unidadeMedida.simbolo, contratacao.dataAssinatura", criterio:"material.id = ${itens.id}" )){cont->
		
		ultimo = ultimo == 0?cont.valorUnitarioPercentual:ultimo
		
		listaAditivos << [
			objeto: itens.descricao,
			dataRegistro: cont.contratacao.dataAssinatura,
			quantidade: cont.quantidade,
			unidadeMedida: cont.material.unidadeMedida.simbolo,
			valorItem: cont.valorUnitarioPercentual,
			valorTotal: cont.valorTotal,
			itemId: itens.id
		]
		
	}

	percorrer(fonteAditivosItens){adds->
	
		se(adds.contratacaoItem.material.id == itens.id){
			
//			imprimir adds.quantidade + " , " + adds.valorItem + " , " + adds.valorTotal + " , " + percentual + " , " + ultimo + " , " + adds.contratacaoItem.valorUnitarioPercentual
			
			listaAditivos << [
				objeto: itens.descricao,
				dataRegistro: adds.aditivo.dataAditivo,
				quantidade: adds.quantidade,
				unidadeMedida: itens.unidadeMedida.simbolo,
				valorItem: adds.valorItem,
				valorTotal: adds.valorTotal,
				itemId: itens.id
			]
			
		}
	
	}
	
	listaAditivos = listaAditivos.sort {a,b -> a.dataRegistro <=> b.dataRegistro}
	
	percorrer(listaAditivos){
		imprimir item
	}
	
	point = 0
	percorrer(3..1){
		ant = listaAditivos.size() - item - 1
		if((listaAditivos.size() - item) >= 0){
			point = listaAditivos.size() - item
			
			percentual = (listaAditivos[point].valorItem / (ant < 0?listaAditivos[point].valorItem:listaAditivos[ant].valorItem)) - 1
			
			fonte.inserirLinha(
				objeto: listaAditivos[point].objeto,
				dataRegistro: listaAditivos[point].dataRegistro,
				quantidade: listaAditivos[point].quantidade,
				unidadeMedida: listaAditivos[point].unidadeMedida.replace(".",""),
				valorItem: listaAditivos[point].valorItem,
				valorTotal: listaAditivos[point].valorTotal,
				valorItemAnterior: (ant < 0?0:listaAditivos[ant].valorItem),
				porcentagem: percentual,
				itemId: listaAditivos[point].itemId
			)
		}
	}
	
	listaAditivos = []
	
}

retornar fonte