paramEntidade = parametros.entidade.valor
paramMaterial = parametros.material.valor

esquema = [
	objeto: Esquema.caracter,
	dataAditivo: Esquema.data,
	quantidade: Esquema.numero,
	unidadeMedida: Esquema.caracter,
	valorItem: Esquema.numero,
	valorTotal: Esquema.numero,
	valorItemAnterior: Esquema.numero,
	porcentagem: Esquema.numero,
	itemId: Esquema.inteiro
]

fonte = Dados.dinamico.v2.novo(esquema)

critMat = "id != 0"
if(paramMaterial != null){
	critMat = "id = ${paramMaterial}"
}

critEnt = "id != 0"
if(paramEntidade != null){
	critEnt = "entidade.id = ${paramEntidade}"
}

imprimir critMat
imprimir critEnt

fonteMateriais = Dados.contratos.v1.materiais.busca(campos:"id, descricao, unidadeMedida.simbolo, id", ordenacao:"descricao asc, id asc", criterio:critMat)
fonteAditivosItens = Dados.contratos.v1.contratacoes.aditivos.itens.busca(campos:"id, quantidade, valorItem, valorTotal, contratacaoItem.valorTotal, aditivo.dataAditivo, contratacaoItem.material.id, contratacaoItem.valorUnitarioPercentual", ordenacao:"aditivo.dataAditivo asc, aditivo.id asc", criterio:critEnt)

percentual = nulo
ultimo = 0
count = 0
listaAditivos = []

percorrer(fonteMateriais){itens->

	imprimir itens.descricao

	percorrer(fonteAditivosItens){adds->
	
		se(adds.contratacaoItem.material.id == itens.id){
		
			ultimo = ultimo == 0?adds.contratacaoItem.valorUnitarioPercentual:ultimo
			
			percentual = (adds.valorItem / (ultimo == 0?1:ultimo)) - 1
			
//			imprimir adds.quantidade + " , " + adds.valorItem + " , " + adds.valorTotal + " , " + percentual + " , " + ultimo + " , " + adds.contratacaoItem.valorUnitarioPercentual
			
			listaAditivos << [
				objeto: itens.descricao,
				dataAditivo: adds.aditivo.dataAditivo,
				quantidade: adds.quantidade,
				unidadeMedida: itens.unidadeMedida.simbolo,
				valorItem: adds.valorItem,
				valorTotal: adds.valorTotal,
				valorItemAnterior: ultimo,
				porcentagem: percentual,
				itemId: itens.id
			]
			
			ultimo = adds.valorItem
			percentual = 0
			count++
		}
	
	}
	
	listaAditivos.sort {itemId,dataAditivo}
	
	point = 0
	percorrer(3..1){
		if((listaAditivos.size() - item) >= 0){
			point = listaAditivos.size() - item
//			imprimir point + " , " + listaAditivos[point].objeto + " , " + listaAditivos[point].quantidade + " , " + listaAditivos[point].valorItem + " , " + listaAditivos[point].valorItemAnterior
			fonte.inserirLinha(
				objeto: listaAditivos[point].objeto,
				dataAditivo: listaAditivos[point].dataAditivo,
				quantidade: listaAditivos[point].quantidade,
				unidadeMedida: listaAditivos[point].unidadeMedida,
				valorItem: listaAditivos[point].valorItem,
				valorTotal: listaAditivos[point].valorTotal,
				valorItemAnterior: listaAditivos[point].valorItemAnterior,
				porcentagem: listaAditivos[point].porcentagem,
				itemId: listaAditivos[point].itemId
			)
		}
	}
	
	listaAditivos = []
	
	count = 0
	ultimo = 0
}

retornar fonte