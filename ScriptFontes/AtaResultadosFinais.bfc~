utils = importar "utilitarios"
/*
Nome				Tipo do dado no JRXML							Parâmetros obrigatório
Esquema.caracter	java.lang.String								Nenhum
Esquema.inteiro		java.lang.Long									Nenhum
Esquema.numero		java.math.BigDecimal							Nenhum
Esquema.data		java.util.Date									Nenhum
Esquema.objeto		Utilização do "_" para acessar a propriedade	Lista de propriedades do objeto
Esquema.lista		java.util.List									Esquema da lista

esquema = [
  nome: Esquema.caracter,
  salario: Esquema.numero,
  pai: Esquema.objeto([
    nome: Esquema.caracter,
    nascimento: Esquema.data,
    dependentes: Esquema.lista(Esquema.objeto([
      nome: Esquema.caracter,
      idade: Esquema.inteiro
    ]))
  ])
]

*/

paramAno = parametros.anoLetivo.valor
paramEstabelecimento = parametros.estabelecimento.valor
paramTurma = parametros.turma.valor
paramAdmin = parametros.admin.valor

esquema2 = [
	nomeAluno: Esquema.caracter,
	disciplina: Esquema.caracter,
	notaNumerica: Esquema.numero,
	situacao: Esquema.caracter,
	anoLetivo: Esquema.inteiro,
	estabelecimento: Esquema.caracter,
	estabelecimentoTelefone: Esquema.caracter,
	estabelecimentoSite: Esquema.caracter,
	turma: Esquema.caracter,
	turno: Esquema.caracter,
	matriz: Esquema.caracter,
	etapa: Esquema.caracter,
	dataAta: Esquema.data,
	ata: Esquema.caracter,
	numeroAta: Esquema.inteiro,
	cargaHoraria: Esquema.inteiro,
	diretor: Esquema.caracter,
	diretorMatricula: Esquema.caracter,
	coordenador: Esquema.caracter,
	coordenadorMatricula: Esquema.caracter,
	administrativo: Esquema.caracter,
	administrativoMatricula: Esquema.caracter,
	modalidade: Esquema.caracter
]

fonte = Dados.dinamico.v2.novo(esquema2)

fonteRegAvaliacao = Dados.educacao.v1."registro-avaliacao"
fonteResFrequencia = Dados.educacao.v1."resultado-frequencia"
fonteTurma = Dados.educacao.v1.turma
fonteTurmaDisc = Dados.educacao.v1.turmaDisciplina
fonteEquipeDir = Dados.educacao.v1.equipeDiretiva
fonteEnturmacao = Dados.educacao.v1.enturmacao
fonteItemAvalTurma = Dados.educacao.v1."item-avaliacao-turma"

disc = ""
teleFormat = ""
percentualFaltas = 0
ata = ""
dataAta = Datas.hoje()
numeroAta = 0
numAulas = 0
faltas = 0
situacao = ""
cargaHorariaDisc = ""
cargaHorariaTurma = 0
diretor = ""
diretorMatricula = ""
coordenador = ""
coordenadorMatricula = ""
administrativo = ""
administrativoMatricula = ""
notaDoItem = nulo

percorrer(fonteEquipeDir.lista(campos:"id,funcionario.servidor.pessoa.nome, funcionario.matricula, funcionario.cargo.descricao, funcionario.cargoComissionado.descricao", criterio:"estabelecimento.id = ${paramEstabelecimento}")){eqpDir->

	se(eqpDir.funcionario.cargo.descricao == "DIRETOR ESCOLAR" || eqpDir.funcionario.cargoComissionado.descricao == "DIRETOR ESCOLAR"){
		diretor = eqpDir.funcionario.servidor.pessoa.nome
		diretorMatricula = eqpDir.funcionario.matricula
	}
	se(eqpDir.funcionario.cargo.descricao == "COORDENADOR PEDAGOGICO" || eqpDir.funcionario.cargoComissionado.descricao == "COORDENADOR PEDAGOGICO"){
		coordenador = eqpDir.funcionario.servidor.pessoa.nome
		coordenadorMatricula = eqpDir.funcionario.matricula
	}
	se(eqpDir.id == paramAdmin){
		administrativo = eqpDir.funcionario.servidor.pessoa.nome
		administrativoMatricula = eqpDir.funcionario.matricula
	}

}

crit = "anoLetivo.ano = ${paramAno} and estabelecimento.id = ${paramEstabelecimento} and turma.id = ${paramTurma}"

percorrer(fonteEnturmacao.lista(campos:"anoLetivo.ano, turma.etapaMatriz.etapaInep.nome, turma.etapaMatriz.matriz.descricao, estabelecimento.pessoa.nome, estabelecimento.pessoa.telefone, estabelecimento.pessoa.site, turma.descricao, turma.turno, matricula.aluno.pessoa.nome, dataFim, matricula.situacao, matricula.aluno.id, id, turma.id, turma.vagaEtapa.etapaMatriz.id, turma.configuracaoHorasAulas.cargaHorariaSemanal, turma.etapaMatriz.matriz.diasLetivos, turma.modalidadeTurma", criterio:crit, ordenacao:"matricula.aluno.pessoa.nome asc")){enturma->

	percorrer(fonteItemAvalTurma.lista(campos:"itemEducacional.descricao, itemEducacional.pai.descricao, servidor.pessoa.nome, itemEducacional.descricao, itemAvaliacaoTurma.itemEducacional.pai.descricao, itemEducacional.id",criterio:"turma.id = ${enturma.turma.id}", ordenacao:"itemAvaliacaoTurma.itemEducacional.descricao asc, itemAvaliacaoTurma.itemEducacional.pai.descricao asc")){avalTurma->

		percorrer(fonteRegAvaliacao.lista(campos:"instrumentoAvaliacao.viewTurmaDisciplina.etapaMatrizDisciplina.id, instrumentoAvaliacao.viewTurmaDisciplina.etapaMatrizDisciplina.cargaHoraria, instrumentoAvaliacao.viewTurmaAtividade.cargaHoraria, notaNumerica, modoAvaliacao", criterio:"enturmacao.id = ${enturma.id} and itemAvaliacaoTurma.id = ${itemAval.id} and (itemAvaliacaoTurma.tipoPeriodo = 'MEDIA_FINAL' or itemAvaliacaoTurma.tipoPeriodo = 'MODULO')", ordenacao:"")){ regAval ->

			/*se(regAval.anoLetivo.ano > 2017){
				crit = crit + " and (itemEducacional.id = ${regAval.itemAvaliacaoTurma.itemEducacional.id} or itemEducacional.id = ${regAval.itemAvaliacaoTurma.itemEducacional.pai.id})"
			}*/
					
			notaDoItem = regAval.notaNumerica
			
			//avaliacao descritiva
			se(regAval.modoAvaliacao == "DESCRITIVA"){
				notaNumerica = -1
			}
			
		}
		
		//Porcentagem de faltas
		crit = "anoLetivo.ano = ${paramAno} and enturmacao.id = ${enturma.id}"
		percorrer(fonteResFrequencia.lista(campos:"percentualTotal",criterio:crit)){resFreq->
			se (resFreq.percentualTotal > 0){
				percentualFaltas = resFreq.percentualTotal
//				imprimir "Freq = " + percentualFaltas
			}
		
		}
		
		//carga horaria por disciplina
		se(enturma.turma.modalidadeTurma == "EJA" || enturma.turma.modalidadeTurma == nulo){
			percorrer(fonteTurmaDisc.lista(campos:"etapaMatrizDisciplina.disciplina.id, etapaMatrizDisciplina.cargaHoraria", criterio:"itemEducacional.id = ${avalTurma.itemEducacional.id}")){turmDisc->
				cargaHorariaDisc = "\nCH: " + (turmDisc.etapaMatrizDisciplina.cargaHoraria/3600) + " h/a"
				//imprimir "CH" + cargaHorariaDisc
			}
			//imprimir "IN CH: " + regAval.itemAvaliacaoTurma.itemEducacional.id
		} senao {
		//carga horaria por turma
			cargaHorariaTurma = Numeros.arredonda(((enturma.turma.etapaMatriz.matriz.diasLetivos / 5) * (enturma.turma.configuracaoHorasAulas.cargaHorariaSemanal/3600)),0)
		}
		
		//formatacao
		teleFormat = utils.formataTelefone(enturma.estabelecimento.pessoa.telefone)
		
		percorrer(fonteTurma.lista(campos:"camposAdicionais.padrao.data, camposAdicionais.padrao.ata, camposAdicionais.padrao.numeroata", criterio:"id = ${regAval.enturmacao.turma.id}")){tur->
		
			dataAta = tur.camposAdicionais.padrao.data?:Datas.data(1800,1,1)
			ata = tur.camposAdicionais.padrao.ata?:""
			numeroAta = tur.camposAdicionais.padrao.numeroata?:0
			
		}
		
		disc = avalTurma.itemEducacional.descricao

		se(disc.tamanho() < 2){
			disc = avalTurma.itemEducacional.pai.descricao
		}
		
		imprimir enturma.matricula.aluno.pessoa.nome + " - " + enturma.matricula.situacao
		switch(enturma.matricula.situacao){

			case "APROVADO":
				situacao = "AP"
				break
			case "CURSANDO":
				situacao = "CR"
				break
			case "DISPENSADO":
				situacao = "DS"
				break
			case "REPROVADO_FREQUENCIA":
				situacao = "RF"
				break
			case "REPROVADO":
				situacao = "RP"
				break
			case "DEIXOU_FREQUENTAR":
				situacao = "DE"
				break
			case "TRANSFERIDO":
				situacao = "TR"
				break
			case "APROVADO_CONSELHO":
				situacao = "AC"
				break
			default:
				situacao = "OT"

		}
		
		se(situacao == "AP" && notaDoItem < 7){ //nota
			situacao == "AC"
		}
		
		fonte.inserirLinha(
			nomeAluno: enturma.matricula.aluno.pessoa.nome,
			disciplina: disc + cargaHorariaDisc,
			notaNumerica: enturma.notaNumerica,
			situacao: percentualFaltas + "%\n" + situacao,
			anoLetivo: enturma.anoLetivo.ano,
			estabelecimento: enturma.estabelecimento.pessoa.nome,
			estabelecimentoTelefone: teleFormat,
			estabelecimentoSite: enturma.estabelecimento.pessoa.site,
			turma: enturma.turma.descricao,
			turno: enturma.turma.turno,
			matriz: enturma.turma.etapaMatriz.matriz.descricao,
			etapa: enturma.turma.etapaMatriz.etapaInep.nome,
			dataAta: dataAta,
			ata: ata,
			numeroAta: numeroAta,
			cargaHoraria: cargaHorariaTurma,
			diretor: diretor,
			diretorMatricula: diretorMatricula,
			coordenador: coordenador,
			coordenadorMatricula: coordenadorMatricula,
			administrativo: administrativo,
			administrativoMatricula: administrativoMatricula,
			modalidade: enturma.turma.modalidadeTurma
		)
		
		imprimir "Nome: ${regAval.enturmacao.matricula.aluno.pessoa.nome} | Disciplina: ${disc} | Nota: ${regAval.notaNumerica} | Situacao: ${regAval.enturmacao.matricula.situacao} | AULAS: ${numAulas} | FALTAS: ${faltas}"
		
		percentualFaltas = 0
		numAulas = 0
		faltas = 0
		cargaHorariaDisc = ""
		cargaHorariaTurma = 0
	
	}

}
retornar fonte